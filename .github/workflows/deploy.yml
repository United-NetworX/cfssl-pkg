# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Go environment
        uses: actions/setup-go@v2.1.4

      - name: Retrieve version
        run: |
          echo "::set-output name=tag::$(curl --silent "https://api.github.com/repos/cloudflare/cfssl/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')"
        id: version

      - name: Git Clone Action
        # You may pin to the exact commit or the version.
        # uses: sudosubin/git-clone-action@8a93ce24d47782e30077508cccacf8a05a891bae
        uses: sudosubin/git-clone-action@v1.0.1
        with:
          # Repository owner and name. Ex: sudosubin/git-clone-action
          repository: cloudflare/cfssl
          ref: ${{ steps.version.outputs.tag }}
      
      - name: Build CFSSL
        run: go build -v ./...

      # Build DEB Package
      - name: Build Linux DEB Packages
        uses: kentik/pkg@v1
        with:
          name: cfssl
          version: ${{ steps.version.outputs.tag }}
          arch: x86_64
          format: rpm
          package: ../package.yaml

      # Build RPM Package
      - name: Build Linux PKG Packages
        uses: kentik/pkg@v1
        with:
          name: cfssl
          version: ${{ steps.version.outputs.tag }}
          arch: x86_64
          format: deb
          package: ../package.yaml

          
